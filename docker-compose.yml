version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: mysql_db
    restart: always
    environment:
      - MYSQL_DATABASE=jank
      - MYSQL_ROOT_PASSWORD=root@2024
      - MYSQL_USER=<DATABASE_USER>
      - MYSQL_PASSWORD=<DATABASE_PASSWORD>
    command:
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --max-connections=1000
      --wait-timeout=28800
      --bind-address=0.0.0.0
      --skip-name-resolve
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-u", "root", "-proot@2024"]
      interval: 30s
      timeout: 10s
      retries: 30
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - jank_blog_network

  redis:
    image: redis:7.0
    container_name: redis_db
    restart: unless-stopped
    command: redis-server --save ""
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - redis_data:/data
    networks:
      - jank_blog_network

  app:
    build: .
    container_name: jank_blog_app
    restart: unless-stopped
    ports:
      - "9010:9010"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./configs:/app/configs
    networks:
      - jank_blog_network

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./configs/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - app
    networks:
      - jank_blog_network

volumes:
  mysql_data:
  redis_data:

networks:
  jank_blog_network:
    driver: bridge